{"version":3,"sources":["components/PlanetDetails/Resident.js","components/PlanetDetails/ResidentsList.js","components/PlanetDetails/index.js","components/PlanetsList/PlanetCard.js","components/PlanetsList/PlanetsListNavbar.js","components/PlanetsList/index.js","hooks/index.js","App.js","index.js"],"names":["Resident","props","residentUrl","parsedUrl","URL","useState","resident","setResident","useEffect","fetch","host","pathname","then","response","ok","json","name","data","List","Item","Icon","ResidentsList","residents","map","item","index","key","PlanetDetails","location","useLocation","backUrl","state","page","planet","setPlanet","Container","className","Menu","compact","icon","to","Table","definition","Body","Row","Cell","rotation_period","diameter","climate","gravity","population","PlanetCard","planetId","url","match","split","slice","imgUrl","Card","Content","Header","Meta","replace","Image","src","onError","e","target","extra","NavBtn","iconName","isPrime","currentPage","listMeta","query","direction","Number","prev","next","Button","primary","disabled","search","color","size","PlanetsListNav","count","PlanetsList","URLSearchParams","get","planetsList","setPlanetsList","setListMeta","results","previous","as","textAlign","Grid","centered","columns","App","exact","path","children","render","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f1e7e54f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { List } from 'semantic-ui-react'\n\nexport const Resident = (props) => {\n    const {residentUrl} = props;\n    const parsedUrl = new URL(residentUrl);\n\n    const [resident, setResident] = useState({})\n    useEffect(()=>{\n        fetch(`https://${parsedUrl.host}${parsedUrl.pathname}`)\n        .then((response)=>{return response.ok ? response.json() : {name: 'Unknown'}})\n        .then(data=>setResident(data))\n    }, [residentUrl])\n    return <List.Item><List.Icon name='user' /> {resident.name}</List.Item>\n};\n","import React from \"react\";\nimport { Resident } from \"./Resident\";\n\nexport const ResidentsList = (props) => {\n  const { residents } = props;\n  return (\n    <>\n      {residents &&\n        residents.map((item, index) => (\n          <Resident key={index} residentUrl={item} />\n        ))}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { Table, Container, Menu } from \"semantic-ui-react\";\nimport { ResidentsList } from \"./ResidentsList\";\n\nimport \"./index.css\";\n\nconst PlanetDetails = () => {\n  const location = useLocation();\n  const backUrl = location.state ? location.state.page : '/';\n  const [planet, setPlanet] = useState({});\n\n  useEffect(() => {\n    if (location.state && location.state.planet) {\n      setPlanet(location.state.planet);\n    } else {\n      fetch(\"https://swapi.dev/api\" + location.pathname)\n        .then((response) => response.json())\n        .then((data) => setPlanet(data));\n    }\n  }, [location]);\n\n  return (\n    <Container className=\"planetDetails\">\n      <Menu compact icon=\"labeled\">\n        <Menu.Item name=\"Back\">\n          <Link to={backUrl}>Back</Link>\n        </Menu.Item>\n\n        <Menu.Item name=\"Home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n      </Menu>\n      {planet && (\n        <Table definition>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>Name</Table.Cell>\n              <Table.Cell>{planet.name}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Rotation period</Table.Cell>\n              <Table.Cell>{planet.rotation_period}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Diameter</Table.Cell>\n              <Table.Cell>{planet.diameter}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Climate</Table.Cell>\n              <Table.Cell>{planet.climate}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Gravity</Table.Cell>\n              <Table.Cell>{planet.gravity}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Population</Table.Cell>\n              <Table.Cell>{planet.population}</Table.Cell>\n            </Table.Row>\n            <Table.Row>\n              <Table.Cell>Residents</Table.Cell>\n              <Table.Cell>\n                {planet && planet.residents && (\n                  <ResidentsList residents={planet.residents} />\n                )}\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      )}\n    </Container>\n  );\n};\n\nexport default PlanetDetails;\n","import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nconst PlanetCard = (props) => {\n  const { planet, page } = props;\n  const planetId = planet.url\n    .match(\"/planets/[0-9]+\")[0]\n    .split(\"/\")\n    .slice(-1)[0];\n  const imgUrl = `https://starwars-visualguide.com/assets/img/planets/${planetId}.jpg`;\n\n  return (\n    <Link\n      to={{\n        pathname: `/planets/${planetId}`,\n        state: { planet: planet, page: page },\n      }}\n      className=\"planetCard\"\n    >\n      <Card>\n        <Card.Content>\n          <Card.Header>{planet.name}</Card.Header>\n          <Card.Meta>Climate: {planet.climate.replace(/\\s/g, \"\")}</Card.Meta>\n        </Card.Content>\n        <Image\n          src={imgUrl}\n          onError={(e) => {\n            e.target.src = \"https://via.placeholder.com/400?text=No+Image\";\n          }}\n        />\n        <Card.Content extra>\n          Population: {planet.population.replace(/(.)(?=(\\d{3})+$)/g, \"$1,\")}\n        </Card.Content>\n      </Card>\n    </Link>\n  );\n};\n\nexport default PlanetCard;\n","import React from \"react\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nconst NavBtn = (props) => {\n  const { pathname, currentPage, listMeta, direction } = props;\n  let iconName;\n  let query = \"?page=\";\n  let isPrime;\n\n  switch (direction) {\n    case \"prev\":\n      iconName = \"long arrow alternate left\";\n      query += Number(currentPage) - 1;\n      isPrime = !listMeta.prev ? false : true;\n      break;\n\n    case \"next\":\n      iconName = \"long arrow alternate right\";\n      query += Number(currentPage) + 1;\n      isPrime = !listMeta.next ? false : true;\n      break;\n\n    default:\n      iconName = \"circle notched\";\n      query += 1;\n      isPrime = true;\n      break;\n  }\n  return (\n    <Button icon primary={isPrime} disabled={!isPrime} className=\"navBtn\">\n      <Link to={{ pathname: pathname, search: query }}>\n        <Icon name={iconName} color=\"black\" size=\"big\" />\n      </Link>\n    </Button>\n  );\n};\n\nconst PlanetsListNav = (props) => {\n  const { listMeta, currentPage } = props;\n\n  return (\n    <div className=\"pagination\">\n      <NavBtn direction=\"prev\" {...props} />\n      <Button className=\"navBtn\">\n        <Link to=\"/\">\n          {currentPage * 10}/{listMeta.count || 0}\n        </Link>\n      </Button>\n      <NavBtn direction=\"next\" {...props} />\n    </div>\n  );\n};\n\nexport default PlanetsListNav;\n","import React, { useEffect, useState } from \"react\";\nimport { Grid, Container, Header } from \"semantic-ui-react\";\nimport { useQuery } from \"../../hooks\";\nimport PlanetCard from \"./PlanetCard\";\nimport PlanetsListNav from \"./PlanetsListNavbar\";\n\nimport \"./index.css\";\n\nconst PlanetsList = () => {\n  const queryParams = useQuery();\n  const currentPage = queryParams.get(\"page\");\n  const [planetsList, setPlanetsList] = useState([]);\n  const [listMeta, setListMeta] = useState({});\n\n  useEffect(() => {\n    fetch(`https://swapi.dev/api/planets/?page=${currentPage}`)\n      .then((response) => {\n        return response.ok ? response.json() : { results: [] };\n      })\n      .then((data) => {\n        setPlanetsList(data.results || []);\n        setListMeta({\n          next: data.next || null,\n          prev: data.previous || null,\n          count: data.count || null,\n        });\n      });\n  }, [currentPage]);\n\n  return (\n    <>\n      <Container className=\"planetsListContainer\">\n        <Header as=\"h2\" icon textAlign=\"center\">\n          Star Wars Planets\n        </Header>\n        <Grid centered columns={3}>\n          {planetsList.map((item, index) => (\n            <PlanetCard\n              key={index}\n              planet={item}\n              page={\"/planets?page=\" + currentPage}\n            />\n          ))}\n        </Grid>\n        <Grid centered columns={1}>\n        <PlanetsListNav\n          pathname=\"/planets\"\n          currentPage={currentPage}\n          listMeta={listMeta}\n        />\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default PlanetsList;\n","import { useLocation } from \"react-router-dom\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PlanetDetails from \"./components/PlanetDetails\";\nimport PlanetsList from \"./components/PlanetsList\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nexport default function App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/planets\" children={<PlanetsList />} />\n        <Route\n          path=\"/planets/:id\"\n          render={(props) => <PlanetDetails {...props} />}\n        />\n        <Route exact path=\"/\">\n          <Redirect\n            to={{\n              pathname: \"/planets\",\n              search: \"?page=1\",\n            }}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}